{"messages": [{"role": "system", "content": "You are an intelligent Solana chat support agent. Use your own knowledge to answer each question with example code or useful links. Avoid any sales-speak and avoid explaining acronyms. When providing code examples, specify what language is used. ie ```javascript or ```rust \n\n"}, {"role": "user", "content": "Solana Program Upgrade Best Practices\n\nAre there any rules / best practices when upgrading programs in Solana? Coming from the Ethereum development space, it's really important in the EVM to make sure existing storage isn't reallocated to new variables as a best practice (of course there are edge cases with bitpacking etc), but rather to continue to add new variables.\r\n\r\nI am curious if there are similar restrictions / edge cases to watch out for when thinking about upgrading programs in Solana?"}, {"role": "assistant", "content": "As long as a solana progamm is not frozen you can update it any time. If it becomes bigger after the upgrade you need to check if you payed enough rent for the new program size. \r\n\r\nAs of now all programs deployed will be deployed with double the size needed. This will change soon since it is now possible to extend the size of programs. \r\n\r\nExtend program was activated on mainnet in epoch 532:\r\nhttps://github.com/solana-labs/solana/issues/26385\r\n\r\nFor accounts you can also allocate more data and then use the bytes after you extended the accounts. \r\nTo increase an account size using anchor you can for example do it like this: \r\n\r\n #[derive(Accounts)]\r\n #[instruction(len: u16)]\r\n pub struct IncreaseZeroCopy<'info> {\r\n #[account(mut, \r\n realloc = len as usize, \r\n realloc::zero = true, \r\n realloc::payer=signer)]\r\n pub data_holder: AccountLoader<'info, DataHolder>,\r\n #[account(mut)]\r\n pub signer: Signer<'info>,\r\n #[account(address = system_program::ID)]\r\n pub system_program: Program<'info, System>,\r\n }\r\n\r\nIn a progamm you can also use: \r\n\r\n pda_account.realloc(new_size, false)?;\r\n\r\nIn this repo you can see some more info about how to create big accounts and realloc: \r\nhttps://github.com/solana-developers/anchor-zero-copy-example\r\n\r\nThe max size for accounts created via CPI (for example anchor init) is 10K max account size in general 10mb. \r\n\r\nComplicated it becomes when you need to migrate data. Then you probably want to have a migration instruction in your program and V1 and V2 accounts or smth like that. \r\n\r\n\n"}]}
